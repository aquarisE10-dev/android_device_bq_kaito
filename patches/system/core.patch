From 6bbcd6bf056ca73d02332b206f0b3f00222dab80 Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 07:43:06 +0000
Subject: [PATCH 1/2] Init: Re-allow services without selinux contexts defined

---
 init/init.cpp    | 4 +++-
 init/service.cpp | 2 ++
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/init/init.cpp b/init/init.cpp
index 7a370596e..7d8f6ed84 100755
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -440,6 +440,7 @@ static void selinux_init_all_handles(void)
     sehandle_prop = selinux_android_prop_context_handle();
 }
 
+#if 0
 enum selinux_enforcing_status { SELINUX_PERMISSIVE, SELINUX_ENFORCING };
 
 static selinux_enforcing_status selinux_status_from_cmdline() {
@@ -453,11 +454,12 @@ static selinux_enforcing_status selinux_status_from_cmdline() {
 
     return status;
 }
+#endif
 
 static bool selinux_is_enforcing(void)
 {
     if (ALLOW_PERMISSIVE_SELINUX) {
-        return selinux_status_from_cmdline() == SELINUX_ENFORCING;
+        return false;
     }
     return true;
 }
diff --git a/init/service.cpp b/init/service.cpp
index 8127e708d..a09fd8f71 100644
--- a/init/service.cpp
+++ b/init/service.cpp
@@ -371,12 +371,14 @@ bool Service::Start() {
             scon = ret_scon;
             free(ret_scon);
         }
+#if 0
         if (rc == 0 && scon == mycon) {
             ERROR("Service %s does not have a SELinux domain defined.\n", name_.c_str());
             free(mycon);
             free(fcon);
             return false;
         }
+#endif
         free(mycon);
         free(fcon);
         if (rc < 0) {

From b9991901454446d3a0122502b37c9c86c52f119f Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 07:48:04 +0000
Subject: [PATCH 2/2] Mediatek: Various Fixes

---
 init/init.cpp               |  2 +-
 libcutils/Android.mk        |  4 +++-
 libcutils/fs_config.c       |  2 +-
 libcutils/mtk_audioCompat.c |  4 ++++
 libcutils/mtk_xlog.cpp      | 27 +++++++++++++++++++++++++++
 rootdir/init.rc             | 18 ++++++++++++++++++
 6 files changed, 54 insertions(+), 3 deletions(-)
 create mode 100644 libcutils/mtk_audioCompat.c
 create mode 100644 libcutils/mtk_xlog.cpp

diff --git a/init/init.cpp b/init/init.cpp
index 7d8f6ed84..8fa198ea3 100755
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -555,7 +555,7 @@ static int charging_mode_booting(void) {
     }
 
     close(f);
-    return ('1' == cmb);
+    return ('8' == cmb);
 #endif
 }
 
diff --git a/libcutils/Android.mk b/libcutils/Android.mk
index 7a922539f..aa34681ff 100644
--- a/libcutils/Android.mk
+++ b/libcutils/Android.mk
@@ -102,6 +102,8 @@ LOCAL_SRC_FILES := $(libcutils_common_sources) \
         qtaguid.c \
         trace-dev.c \
         uevent.c \
+        mtk_xlog.cpp \
+        mtk_audioCompat.c
 
 LOCAL_SRC_FILES_arm += arch-arm/memset32.S
 LOCAL_SRC_FILES_arm64 += arch-arm64/android_memset.S
@@ -133,7 +135,7 @@ endif
 ifneq ($(ENABLE_SCHEDBOOST),)
 LOCAL_CFLAGS += -DUSE_SCHEDBOOST
 endif
-LOCAL_CFLAGS += -Werror -Wall -Wextra -std=gnu90
+LOCAL_CFLAGS += -Wall -Wextra -std=gnu90
 LOCAL_CLANG := true
 LOCAL_SANITIZE := integer
 include $(BUILD_STATIC_LIBRARY)
diff --git a/libcutils/fs_config.c b/libcutils/fs_config.c
index 68cfcbe00..3c01c79f8 100644
--- a/libcutils/fs_config.c
+++ b/libcutils/fs_config.c
@@ -143,7 +143,7 @@ static const struct fs_path_config android_files[] = {
     { 00700, AID_SYSTEM,    AID_SHELL,     CAP_MASK_LONG(CAP_BLOCK_SUSPEND), "system/bin/inputflinger" },
 
     /* Support FIFO scheduling mode in SurfaceFlinger. */
-    { 00755, AID_SYSTEM,    AID_GRAPHICS,     CAP_MASK_LONG(CAP_SYS_NICE), "system/bin/surfaceflinger" },
+    //{ 00755, AID_SYSTEM,    AID_GRAPHICS,     CAP_MASK_LONG(CAP_SYS_NICE), "system/bin/surfaceflinger" },
 
     { 00750, AID_ROOT,      AID_ROOT,      0, "system/bin/uncrypt" },
     { 00750, AID_ROOT,      AID_ROOT,      0, "system/bin/install-recovery.sh" },
diff --git a/libcutils/mtk_audioCompat.c b/libcutils/mtk_audioCompat.c
new file mode 100644
index 000000000..7b00e646d
--- /dev/null
+++ b/libcutils/mtk_audioCompat.c
@@ -0,0 +1,4 @@
+int get_capture_position(void)
+{
+    return 0;
+}
diff --git a/libcutils/mtk_xlog.cpp b/libcutils/mtk_xlog.cpp
new file mode 100644
index 000000000..48abe313c
--- /dev/null
+++ b/libcutils/mtk_xlog.cpp
@@ -0,0 +1,27 @@
+#include <cutils/log.h>
+
+extern "C" {
+	struct xlog_record {
+		const char *tag_str;
+		const char *fmt_str;
+		int prio;
+	};
+
+	static void init(void) __attribute__ ((constructor));
+
+	void init(void){}
+
+	int __xlog_buf_printf(int bufid, const struct xlog_record *rec, ...)
+	{
+	  va_list args;
+	  va_start(args, rec);
+	  LOG_PRI_VA(rec->prio, rec->tag_str, rec->fmt_str, args);
+	  va_end(args);
+
+	  return 0;
+	}
+
+	void dl_unregister_notify_function(void){}
+
+	void dl_register_notify_function(int (*load_notify_function) (const char *name, uintptr_t address, uintptr_t size), int(*unload_notify_function) (const char *name, uintptr_t address)){}
+}
diff --git a/rootdir/init.rc b/rootdir/init.rc
index 0de027bf1..36b25216b 100644
--- a/rootdir/init.rc
+++ b/rootdir/init.rc
@@ -217,6 +217,7 @@ on init
 
     # Create location for fs_mgr to store abbreviated output from filesystem
     # checker programs.
+
     mkdir /dev/fscklogs 0770 root system
 
     # pstore/ramoops previous console log
@@ -658,6 +659,23 @@ service healthd /sbin/healthd
     seclabel u:r:healthd:s0
     group root system wakelock
 
+service surfaceflinger /system/bin/surfaceflinger
+    class core
+    user root
+    group graphics drmrpc
+    onrestart restart zygote
+
+service drm /system/bin/drmserver
+    class main
+    user drm
+    group drm system inet drmrpc
+
+service media /system/bin/mediaserver
+    class main
+    user root
+    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc mediadrm qcom_diag
+    ioprio rt 4
+
 service console /system/bin/sh
     class core
     console

